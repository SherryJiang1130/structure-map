{"id":"libs/drawArr.js","dependencies":[{"name":"C:\\Users\\jiangxueyan\\Desktop\\mind\\package.json","includedInParent":true,"mtime":1539846455631},{"name":"raphael","loc":{"line":1,"column":20},"parent":"C:\\Users\\jiangxueyan\\Desktop\\mind\\src\\libs\\drawArr.js","resolved":"C:\\Users\\jiangxueyan\\Desktop\\mind\\node_modules\\raphael\\raphael.min.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawArr = void 0;\n\nvar _raphael = _interopRequireDefault(require(\"raphael\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar drawArr = function drawArr(obj, that) {\n  var point = getStartEnd(obj.obj1, obj.obj2);\n  var path1 = getArr(point.start.x, point.start.y, point.end.x, point.end.y, 8);\n\n  if (obj.arrPath) {\n    obj.arrPath.attr({\n      path: path1\n    });\n  } else {\n    obj.arrPath = that.path(path1);\n  }\n\n  return obj;\n};\n\nexports.drawArr = drawArr;\n\nfunction getStartEnd(obj1, obj2) {\n  var bb1 = obj1.getBBox(),\n      bb2 = obj2.getBBox();\n  var p = [{\n    x: bb1.x + bb1.width / 2,\n    y: bb1.y - 1\n  }, {\n    x: bb1.x + bb1.width / 2,\n    y: bb1.y + bb1.height + 1\n  }, {\n    x: bb1.x - 1,\n    y: bb1.y + bb1.height / 2\n  }, {\n    x: bb1.x + bb1.width + 1,\n    y: bb1.y + bb1.height / 2\n  }, {\n    x: bb2.x + bb2.width / 2,\n    y: bb2.y - 1\n  }, {\n    x: bb2.x + bb2.width / 2,\n    y: bb2.y + bb2.height + 1\n  }, {\n    x: bb2.x - 1,\n    y: bb2.y + bb2.height / 2\n  }, {\n    x: bb2.x + bb2.width + 1,\n    y: bb2.y + bb2.height / 2\n  }];\n  var d = {},\n      dis = [];\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 4; j < 8; j++) {\n      var dx = Math.abs(p[i].x - p[j].x),\n          dy = Math.abs(p[i].y - p[j].y);\n\n      if (i == j - 4 || (i != 3 && j != 6 || p[i].x < p[j].x) && (i != 2 && j != 7 || p[i].x > p[j].x) && (i != 0 && j != 5 || p[i].y > p[j].y) && (i != 1 && j != 4 || p[i].y < p[j].y)) {\n        dis.push(dx + dy);\n        d[dis[dis.length - 1]] = [i, j];\n      }\n    }\n  }\n\n  if (dis.length == 0) {\n    var res = [0, 8];\n  } else {\n    res = d[Math.min.apply(Math, dis)];\n  }\n\n  var result = {};\n  result.start = {};\n  result.end = {};\n  result.start.x = p[res[0]].x;\n  result.start.y = p[res[0]].y;\n  result.end.x = p[res[1]].x;\n  result.end.y = p[res[1]].y;\n  return result;\n} //获取组成箭头的三条线段的路径\n\n\nfunction getArr(x1, y1, x2, y2, size) {\n  var angle = _raphael.default.angle(x1, y1, x2, y2); //得到两点之间的角度\n\n\n  var a45 = _raphael.default.rad(angle - 45); //角度转换成弧度\n\n\n  var a45m = _raphael.default.rad(angle + 45);\n\n  var x2a = x2 + Math.cos(a45) * size;\n  var y2a = y2 + Math.sin(a45) * size;\n  var x2b = x2 + Math.cos(a45m) * size;\n  var y2b = y2 + Math.sin(a45m) * size;\n  var result = ['M', x1, y1, 'L', x2, y2, 'L', x2a, y2a, 'M', x2, y2, 'L', x2b, y2b];\n  return result;\n}","map":null},"hash":"935d4de0e574044f9f3641710896095c","cacheData":{"env":{}}}