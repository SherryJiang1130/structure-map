{"id":"libs/drag/index.ts","dependencies":[{"name":"C:\\Users\\jiangxueyan\\Desktop\\mind\\package.json","includedInParent":true,"mtime":1539846455631},{"name":"../drawArr","loc":{"line":3,"column":24},"parent":"C:\\Users\\jiangxueyan\\Desktop\\mind\\src\\libs\\drag\\index.ts","resolved":"C:\\Users\\jiangxueyan\\Desktop\\mind\\src\\libs\\drawArr.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar drawArr_1 = require(\"../drawArr\");\n\nvar that = null;\n\nvar Drag =\n/** @class */\nfunction () {\n  function Drag(t, connections, shapes, texts) {\n    this.r = t;\n    this.connections = connections;\n    this.shapes = shapes;\n    this.texts = texts;\n    that = this;\n  } // 文字和矩形同步移动\n\n\n  Drag.prototype.textsMove = function (att, id, data, type) {\n    data.forEach(function (element) {\n      if (element.id == id) {\n        if (type == 'text') {\n          att.x += 30;\n          att.y += 20;\n        } else {\n          att.x -= 30;\n          att.y -= 20;\n        }\n\n        element.attr(att);\n      }\n    });\n  };\n\n  Drag.prototype.dragger = function () {\n    this.ox = this.attr('x');\n    this.oy = this.attr('y');\n    this.animate({\n      'fill-opacity': 0.2\n    }, 500);\n  }; //拖动事件\n\n\n  Drag.prototype.move = function (dx, dy) {\n    var att = {\n      x: this.ox + dx,\n      y: this.oy + dy\n    };\n    this.attr(att);\n\n    if (this.type == 'rect') {\n      that.textsMove(att, this.id, that.texts, 'text');\n    } else if (this.type == 'text') {\n      that.textsMove(att, this.id, that.shapes, 'shapes');\n    }\n\n    for (var i = that.connections.length; i--;) {\n      drawArr_1.drawArr(that.connections[i]);\n    }\n  }; //拖动结束后的事件\n\n\n  Drag.prototype.up = function () {\n    this.animate({\n      'fill-opacity': 0.8\n    }, 500);\n  };\n\n  return Drag;\n}();\n\nexports[\"default\"] = Drag;"},"hash":"4fc3514378b2c6c6d952b6ad8ca8fb9b","cacheData":{"env":{}}}